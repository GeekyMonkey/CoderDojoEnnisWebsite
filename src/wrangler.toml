#:schema node_modules/wrangler/config-schema.json
name = "coderdojoennis"
compatibility_date = "2024-12-05"
compatibility_flags = ["nodejs_compat"]
pages_build_output_dir = "./dist"
                                       
[[hyperdrive]]
binding = "NUXT_HYPERDRIVE"
id = "d97bf97ae9294b578f26758a33ff4530"

# Automatically place your workloads in an optimal location to minimize latency.
# If you are running back-end logic in a Pages Function, running it closer to your back-end infrastructure
# rather than the end user may result in better performance.
# Docs: https://developers.cloudflare.com/pages/functions/smart-placement/#smart-placement
# [placement]
# mode = "smart"

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Docs:
# - https://developers.cloudflare.com/pages/functions/bindings/#environment-variables
# Note: Use secrets to store sensitive data.
# - https://developers.cloudflare.com/pages/functions/bindings/#secrets
# [vars]
# MY_VARIABLE = "production_value"

# Bind the Workers AI model catalog. Run machine learning models, powered by serverless GPUs, on Cloudflare’s global network
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#workers-ai
# [ai]
# binding = "AI"

# Bind a D1 database. D1 is Cloudflare’s native serverless SQL database.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#d1-databases
# [[d1_databases]]
# binding = "MY_DB"
# database_name = "my-database"
# database_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"
# script_name = 'my-durable-object'

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#kv-namespaces
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#queue-producers
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#r2-buckets
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/pages/functions/bindings/#service-bindings
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# To use different bindings for preview and production environments, follow the examples below.
# When using environment-specific overrides for bindings, ALL bindings must be specified on a per-environment basis.
# Docs: https://developers.cloudflare.com/pages/functions/wrangler-configuration#environment-specific-overrides

######## PREVIEW environment config ########

[env.preview.vars]

DATABASE_URL="postgresql://postgres:author-Brownnose2@db.newsofwpimzmfbqsooka.supabase.co:5432/postgres"
NUXT_PUBLIC_SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ld3NvZndwaW16bWZicXNvb2thIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5MDM2MTcsImV4cCI6MjA2NTQ3OTYxN30.HZyMyNIVAgTdvQFkCkrYEu-mOJm5P3aAeASkJdlLNYY"
NUXT_PUBLIC_SUPABASE_S3_ROOT="https://newsofwpimzmfbqsooka.supabase.co/storage/v1/s3/"
NUXT_PUBLIC_SUPABASE_URL="https://newsofwpimzmfbqsooka.supabase.co"
NUXT_ENV_RUNTIME="cloudflare"
NUXT_SUPABASE_KEY_PUBLIC="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFubm1naHZ3Y2x6dm9hbWJzaHpiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjYyOTU1OTIsImV4cCI6MjA0MTg3MTU5Mn0.rM6m9Vy6nd1dyYHnrQfj75VZ0EepHwxzvUNNQx22wX4"
NUXT_SUPABASE_URL="https://qnnmghvwclzvoambshzb.supabase.co"

# [[env.preview.kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "<PREVIEW_NAMESPACE_ID>"

######## PRODUCTION environment config ########

[env.production.vars]

NUXT_ENV_RUNTIME="cloudflare"
NUXT_SUPABASE_KEY_PUBLIC="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFubm1naHZ3Y2x6dm9hbWJzaHpiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjYyOTU1OTIsImV4cCI6MjA0MTg3MTU5Mn0.rM6m9Vy6nd1dyYHnrQfj75VZ0EepHwxzvUNNQx22wX4"
NUXT_SUPABASE_URL="https://qnnmghvwclzvoambshzb.supabase.co"


# [[env.production.kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "<PRODUCTION_NAMESPACE_ID>"
