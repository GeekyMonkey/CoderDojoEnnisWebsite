@model CoderDojo.Member
@{
    CoderDojo.Member member = Model;
    int defaultYear = 2000;
    int yearRange = 40;
    var years = Enumerable.Range(DateTime.Today.Year - yearRange, yearRange - 4).Select(y => new SelectListItem { Value = y.ToString(), Text = y.ToString(), Selected = (y == defaultYear) });
    ViewBag.MenuActive = "Members";
    ViewBag.MemberMenuActive = "Details";
    string previousPage = ViewBag.PreviousPage;
    bool newMember = (member.FirstName ?? "").Trim() == "";
    if (newMember) {
        ViewBag.Title = "New Member";
    }
    else
    {
        ViewBag.Title = member.MemberName;
    }

    List<Member> otherTeamMembers = null;
    if (member.Team != null)
    {
        otherTeamMembers = member.Team.Members.Where(tm => tm.Id != member.Id).OrderBy(m => m.FirstName).ToList();
    }
}

@section HeaderLeft {
    <a data-role="button" data-icon="tag" id="PrintButton">Print ID</a>
}

@section HeaderRight {
}

@section Footer {
    <a data-role="button" data-icon="check" id="SaveButton">Save</a>
}

@section Panels
{
    @Html.Partial("_ParentMenu")
}

@if (!newMember)
{
    @Html.Partial("_MemberMenu")
}


@using (Html.BeginForm("MemberSave", "Parent", new RouteValueDictionary(new { PreviousPage = previousPage }), FormMethod.Post))
{
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.FirstName)
    @Html.HiddenFor(m => m.LastName)

        <label>Birth Year</label>
        @Html.DropDownListFor(m => m.BirthYear, years, new { data_inline = "true" })

        if (member.Team != null) {
            <div data-role="collapsible" data-content-theme="a" class="TeamHeader" data-color="@member.Team.HexCode">
                <h3>
                    Team - @member.Team.TeamName
                    <img src="@member.Team.ImageUrl" />
                </h3>
                <div data-role="fieldcontain">
                    <p>Goal: @member.Team.Goal</p>
                    <p>Team Members:</p>
                    <ul id="TeamMembers">
                        @foreach (var teamMember in otherTeamMembers)
                        {
                            <li>
                                <a data-role="button" href="/Parent/TeamMember/@teamMember.Id.ToString("N")">
                                    <img src="@teamMember.ImageUrl" onerror="if (this.src != '/Images/User.png') this.src = '/Images/User.png';" />
                                    @teamMember.FirstName @teamMember.LastName
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        } else {
            <h3>Contact a mentor to have @member.FirstName assigned to a team.</h3>
        }
        
        <fieldset role="controlgroup">
            <div data-role="collapsible-set" data-corners="true" data-inset="true">
                <h3>Memberships</h3>
                <div data-role="collapsible" data-content-theme="a">
                    <h3>CoderDojo</h3>
                    <div data-role="fieldcontain">
                        <label for="Login">Login</label>
                        @Html.TextBoxFor(m => m.Login)
                    </div>
                    <div data-role="fieldcontain">
                        <label for="NewPassword">New Password</label>
                        @Html.PasswordFor(m => m.NewPassword)
                    </div>
                    <div data-role="fieldcontain">
                        <label for="ConfirmPassword">Confirm Password</label>
                        <input type="password" id="ConfirmPassword" />
                    </div>
                </div>
                <div data-role="collapsible" data-content-theme="a">
                    <h3>GitHub</h3>
                    <div data-role="fieldcontain">
                        <label for="GithubLogin">GitHub Login</label>
                        @Html.TextBoxFor(m => m.GithubLogin)
                    </div>
                    @if (!string.IsNullOrEmpty(member.GithubLogin))
                    {
                        <a href="https://github.com" data-role="button" data-icon="github" data-iconpos="right" data-inline="true" id="GithubButton">Go to my GitHub page</a>
                    }
                </div>
                <div data-role="collapsible" data-content-theme="a">
                    <h3>Scratch</h3>
                    <div data-role="fieldcontain">
                        <label for="ScratchName">Scratch Name</label>
                        @Html.TextBoxFor(m => m.ScratchName)
                    </div>
                    @if (!string.IsNullOrEmpty(member.ScratchName))
                    {
                        <a href="http://scratch.mit.edu/users/@(member.ScratchName)" data-role="button" data-icon="scratch" data-iconpos="right" data-inline="true" id="ScratchButton">Go to my Scratch page</a>
                    }
                </div>
                <div data-role="collapsible" data-content-theme="a">
                    <h3>XBox</h3>
                    <div data-role="fieldcontain">
                        <label for="XboxGamertag">XBox Gamertag</label>
                        @Html.TextBoxFor(m => m.XboxGamertag)
                    </div>
                    @if (!string.IsNullOrEmpty(member.XboxGamertag))
                    {
                        <a href="https://live.xbox.com/en-IE/Profile?gamertag=@(member.XboxGamertag)" data-role="button" data-icon="xbox" data-iconpos="right" data-inline="true" id="XboxButton">Go to my XBox page</a>
                        <img src="https://avatar-ssl.xboxlive.com/avatar/@(member.XboxGamertag)/avatarpic-l.png" style="vertical-align:middle;margin-left: 50px;" />
                    }
                </div>
            </div>
        </fieldset>
}


<script type="text/javascript">
    $(function () {
        $(".Controller_Parent.Action_Member #ScratchButton").off().on("click", function (e) {
            e.preventDefault();
            openNewWindow("http://scratch.mit.edu/users/" + $(".Controller_Parent.Action_Member #ScratchName").val());
        });
        $(".Controller_Parent.Action_Member #XboxButton").off().on("click", function (e) {
            e.preventDefault();
            openNewWindow("https://live.xbox.com/en-IE/Profile?gamertag=" + $(".Controller_Parent.Action_Member #XboxGamertag").val());
        });
        $(".Controller_Parent.Action_Member #GithubButton").off().on("click", function (e) {
            e.preventDefault();
            openNewWindow("https://github.com/" + $(".Controller_Parent.Action_Member #GithubLogin").val() + "/");
        });
        $("#SaveButton").off("click").on("click", function (e) {
            e.preventDefault();
            if ($("#NewPassword").val() != $("#ConfirmPassword").val()) {
                alert("Password and Confirm Password do not match.");
            } else {
                var form = $(this).closest("div.pagerole").find("form");
                if (form.length == 0) {
                    console.log("Form save clicked, but form not found");
                }
                form.submit();
            }
        });

        $("#PrintButton").off("click").on("click", function (e) {
            e.preventDefault();
            console.log("Member print @(member.Id.ToString("N"))");
            window.openNewWindow("/Passport/@(member.Id.ToString("N"))");
        });

    });
</script>
