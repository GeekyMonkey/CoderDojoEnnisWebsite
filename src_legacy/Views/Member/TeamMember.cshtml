@model Member
@{
    Member member = Model;
    ViewBag.Title = "Team Member: " + member.FirstName + " " + member.LastName;
    ViewBag.MenuActive = "Profile";
    List<Member> otherTeamMembers = null;
    if (member.Team != null) {
        otherTeamMembers = member.Team.Members.Where(tm => tm.Id != member.Id).OrderBy(m => m.FirstName).ToList();
    }
    bool hasMembership = (!string.IsNullOrEmpty(member.ScratchName)) || (!string.IsNullOrEmpty(member.XboxGamertag));
    List<MemberBelt> MemberBelts = member.MemberBelts.Where(mb => mb.Awarded != null).OrderBy(mb => mb.Belt.SortOrder).ToList();
    List<MemberBadge> MemberBadges = member.MemberBadges
        .Where(mb => mb.Awarded != null)
        .OrderBy(mb => mb.Badge.BadgeCategory.CategoryName)
        .ThenBy(mb => mb.Badge.Achievement)
        .ToList();
}

@section HeaderLeft
{
}

@section HeaderRight
{
}

@section Footer
{
}

@section Panels
{
    @Html.Partial("_MemberMenu")
}

<div data-role="content">
    <h3>Name: @(member.MemberName)</h3>
    <h3>Birth Year: @member.BirthYear</h3>

    @if (member.Team != null) {
        <div data-role="collapsible" data-content-theme="a" class="TeamHeader" data-color="@member.Team.HexCode">
            <h3>
                Team - @member.Team.TeamName
                <img src="@member.Team.ImageUrl" />
            </h3>
            <div data-role="fieldcontain">
                <p>Goal: @member.Team.Goal</p>
                <p>Team Members:</p>
                <ul id="TeamMembers">
                    @foreach (var teamMember in otherTeamMembers)
                    {
                        <li>
                            <a data-role="button" href="/Member/TeamMember/@teamMember.Id.ToString()">
                                <img src="@teamMember.ImageUrl" onerror="if (this.src != '/Images/User.png') this.src = '/Images/User.png';" />
                                @teamMember.FirstName @teamMember.LastName
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    } else {
        <h3>Contact a mentor to be assigned to a team!</h3>
    }

    @* MEMBERSHIPS *@
    @if (!string.IsNullOrEmpty(member.ScratchName)) {
        <a href="http://scratch.mit.edu/users/@(member.ScratchName)" data-role="button" data-icon="scratch" data-iconpos="right" data-inline="true" id="ScratchButton">Go to my Scratch page</a>
    }

    @if (!string.IsNullOrEmpty(member.XboxGamertag)) {
        <a href="https://live.xbox.com/en-IE/Profile?gamertag=@(member.XboxGamertag)" data-role="button" data-icon="xbox" data-iconpos="right" data-inline="true" id="XboxButton">Go to my XBox page</a>
        <img src="https://avatar-ssl.xboxlive.com/avatar/@(member.XboxGamertag)/avatarpic-l.png" style="vertical-align:middle;margin-left: 50px;" />
    }

</div>


@if (MemberBelts.Any())
{
    <h3>Belts Earned</h3>
    foreach (var memberBelt in MemberBelts)
    {
        <div data-role="collapsible" data-content-theme="a" class="BeltHeader" data-color="@memberBelt.Belt.HexCode">
            <h3>@memberBelt.Belt.Color</h3>
            <div data-role="fieldcontain">
                <p>@Html.Raw(memberBelt.Belt.Description.Replace("\r\n", "<br />"))</p>
                <p>Awarded on @memberBelt.Awarded.Value.ToString("dd-MMM-yyyy")</p>
            </div>
        </div>
    }
}


@if (MemberBadges.Any())
{
    <h3>Badges Earned</h3>
    foreach (var memberBadge in MemberBadges)
    {
        <div data-role="collapsible" data-content-theme="a" class="BadgeHeader">
            <h3>@(memberBadge.Badge.BadgeCategory.CategoryName) - @(memberBadge.Badge.Achievement)</h3>
            <div data-role="fieldcontain">
                <p>@memberBadge.Badge.Description</p>
                <p>Awarded on @memberBadge.Awarded.Value.ToString("dd-MMM-yyyy")</p>
            </div>
        </div>
    }
}

<script type="text/javascript">
    $(function () {

        setTimeout(function () {
            $(".TeamHeader").each(function (i, e) {
                $(this).find("h3 .ui-btn-inner").css("transition", "background-color 2s");
                $(this).find("h3 .ui-btn-inner").css("background-color", $(this).data("color"));
                $(this).find(".TeamColorText").css("color", $(this).data("color"));
            });
        }, 1000);

        setTimeout(function () {
            $(".BeltHeader").each(function (i, e) {
                $(this).find("h3 .ui-btn-inner").css("transition", "background-color 2s");
                $(this).find("h3 .ui-btn-inner").css("background-color", $(this).data("color"));
                $(this).find(".BeltColorText").css("color", $(this).data("color"));
            });
        }, 1000);

        $(".Controller_Member.Action_Profile #ScratchButton").off().on("click", function (e) {
            e.preventDefault();
            openNewWindow("http://scratch.mit.edu/users/" + $(".Controller_Member.Action_Profile #ScratchName").val());
        });
        $(".Controller_Member.Action_Profile #XboxButton").off().on("click", function (e) {
            e.preventDefault();
            openNewWindow("https://live.xbox.com/en-IE/Profile?gamertag=" + $(".Controller_Member.Action_Profile #XboxGamertag").val());
        });
        $(".Controller_Member.Action_Profile #GithubButton").off().on("click", function (e) {
            e.preventDefault();
            openNewWindow("https://github.com/" + $(".Controller_Member.Action_Profile #GithubLogin").val() + "/");
        });
    });
</script>
